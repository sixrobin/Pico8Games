pico-8 cartridge // http://www.pico-8.com
version 33
__lua__
-- ‚åÇ main

-- [todo]
-- collisions inter bullets.
-- enemy bullets collisions.
			-- enemy friendly fire?
-- laser destroy enemy bullets.
-- enemy using laser.
			-- need a charging feedback.
-- sfx.
-- music?

function _init()
		gstate=0
		screenfade_init()
		mainmenu_init()
end

function _update60()
		if gstate==0 then
				mainmenu_update()
		elseif gstate==1 then
				game_update()
		elseif gstate==2 then
				gameover_update()
		end
end

function _draw()
		cls(0)
		update_fade()
				
		if gstate==0 then
				mainmenu_draw()
		elseif gstate==1 then
				game_draw()
		elseif gstate==2 then
				gameover_draw()
		end
end


function mainmenu_init()
		startcolseq={7,6,5,6}
		startcoltimer=0
		stars_init()
		
		start_pressed=false
		fade_perc_target=0
end

function mainmenu_update()
		stars_update()
		startcoltimer+=1
		
		if btn(‚ùé) 
	 and not fading
	 and nofade_timer>60
	 then
				fade_perc_target=1
				start_pressed=true
		elseif not fading
		and start_pressed
		and nofade_timer>10
		then
				gstate=1
		  game_init()
		end
end

function mainmenu_draw()
		stars_draw()
		rectfill(39,28,86,64,0)
		spr(165,20,16,11,6) -- logo.
		print("robin si‚ùé",44,70,2)
		
		if not fading 
		and nofade_timer>60
		then
				local _c=table_mod(startcolseq,startcoltimer,5,0)
				print("press ‚ùé to start",30,100,_c)
		end
end


function game_init()
		fade_perc_target=0
		scr=0
		
		pl_init()
		bullets_init()
		enms_init()
		bonus_init()
		stars_init()
end		

function game_update()
		pl_update()
		bullets_update()
		enms_update()
		bonus_update()
		bullets_collision()
		pl_collision()
		stars_update()
		shake_update()
		ptcs_update()
end

function game_draw()
		if not screenflash_draw() then
				stars_draw()
				bullets_draw()
				laser_draw()
				pl_draw()
				enms_draw()
				bonus_draw()
				ptcs_draw()
		end
		
		gui_draw()
end


function gameover_init()
		gstate=2
		enms_killall()
		bonus_clear()
		nofade_timer=0
		
		retry_pressed=false
		exit_pressed=false
end

function gameover_update()
		stars_update()
		shake_update()
		ptcs_update()
		
		startcoltimer+=1

		if nofade_timer>210 then
				if btn(‚ùé) then
				  retry_pressed=true
						fade_perc_target=1
				elseif btn(üÖæÔ∏è) then
				  exit_pressed=true
						fade_perc_target=1
				end
		end
		
		if fade_perc==1 then
				if retry_pressed then
						gstate=1
						game_init()
				elseif exit_pressed then
						gstate=0
						mainmenu_init()
				end
		end
end

function gameover_draw()
		stars_draw()
		ptcs_draw()
		gui_draw()
		
		if nofade_timer>210 then
				local _c=table_mod(startcolseq,startcoltimer,5,0)
				print("press ‚ùé to retry",30,56,_c)
		  print("press üÖæÔ∏è to exit",32,66,5)
		end
end
-->8
-- ÏõÉ player.

function pl_init()
		pl_spd=1
		pl_healthmax=5
		pl_health=pl_healthmax
		pl_dead=false
		pl_spdboost_incr=0.5
		pl_dmgflash_timer=0
		
		pl={x=60,y=90,spd=pl_spd}
end

function pl_update()
		if (pl_dmgflash_timer>0) pl_dmgflash_timer-=1

		if (pl_dead) return
		pl_move()
		pl_shoot()
end

function pl_draw()
		if (pl_dead) return
		
		local _s=1
		if is_laser_on() then
				_s=3
		elseif curr_bns[2] then
				_s=2
		end
  
  spr(_s,pl.x,pl.y)
end

function pl_move()
  -- [todo] normalize.
		if (btn(‚û°Ô∏è)) pl.x+=pl.spd
	 if (btn(‚¨ÖÔ∏è)) pl.x-=pl.spd
		if (btn(‚¨ÜÔ∏è)) pl.y-=pl.spd
		if (btn(‚¨áÔ∏è)) pl.y+=pl.spd

		-- screen clamp.
		pl.x=mid(0,pl.x,120)
		pl.y=mid(8,pl.y,120)
end

function pl_shoot()
		if (pl_dead) return
		
		if btnp(‚ùé)
		and not is_laser_on()
		then
				bullets_add()
				
				-- [todo] different ptcs per bullet type.
				for i=0,2 do
						ptcs_add(pl.x+4,
															pl.y-2,
															-2+rnd(4),
															-2+rnd(4),
															8,
															{10,9,8,2},
															rnd(3,6))
				end
		end
end

function pl_dmg(_d)
		pl_health=max(0,pl_health-_d)
		
		-- game over.
		if pl_health==0 then
				pl_dead=true
				gameover_init()
				
				for i=0,4 do
						ptcs_add(pl.x,
															pl.y,
															-8+rnd(16),
															-8+rnd(16),
															rnd(32)+32,
															{10,1,9,8,2,5,1},
															rnd(10,16))
				end
				
				shake_set(0.2)
		end
		
		pl_dmgflash_timer=2
end

function pl_heal(_h)
		pl_health=min(pl_healthmax,pl_health+_h)
end

function pl_spdboost()
		pl.spd=pl_spd+pl_spdboost_incr
end

function pl_collision()
		-- enemies.
		for e in all(enms) do
				if (abs(e.x-pl.x)<5)
				and (abs(e.y-pl.y)<5)
				then
						del(enms,e)
						shake_add(0.15)
						pl_dmg(1)
						if (pl_health>0) then	
								pl.y+=2 -- recoil.
								for i=0,6 do
										ptcs_add(pl.x+2,
																			pl.y+2,
																			-3+rnd(6),
																			-3+rnd(6),
																			36,
																			{10,1,9,8,2,2,2,1},
																			rnd(8,16))
								end
						end
				end
		end
		
		-- bonus.
		for b in all(bns) do
				if (abs(b.x-pl.x)<6)
				and (abs(b.y-pl.y)<6)
				then
						bonus_pickup(b)
				end
		end
end

function scr_add(_s)
		scr+=_s
		
		-- add enemies.
		if scr>1000
		and enms_cats_availables==1
		then
				enms_cats_availables=2
		end
end
-->8
-- üÖæÔ∏è bullets.

function bullets_init()
		bls={}
		bls_enms={}
		
		bls_cats={}
		add(bls_cats,{spd=2.3,delay=6}) -- base.
		add(bls_cats,{spd=5,delay=10}) -- piercing.
		add(bls_cats,{spd=3,delay=16})	-- exploding.
		
		curr_bls=nil		
		curr_bls_cat=1
		bls_setcat(curr_bls_cat)

		bls_explosion={x=0,y=0,t=0}
end

function bullets_draw()
		for b in all(bls) do
				spr(3+b.cat,b.x,b.y)
		end
		
		for b in all(bls_enms) do
				spr(7,b.x,b.y)
		end
		
		if bls_explosion.t>0 then
				if bls_explosion.t>2 then
				  circfill(bls_explosion.x,bls_explosion.y,25,7)
				else
				  circfill(bls_explosion.x,bls_explosion.y,25,1)
				end
				
				bls_explosion.t-=1
		end
end

function bls_setcat(_c)
		curr_bls_cat=_c
		curr_bls=bls_cats[_c]
		poke(0x5f5c,curr_bls.delay)
		poke(0x5f5d,curr_bls.delay)
end

function bullets_update()
	 -- player.
		for b in all(bls) do
				b.y-=b.spd
				if (b.y<0) del(bls,b)
		end
		
		-- enemies.
		for b in all(bls_enms) do
				b.y+=b.spd
				if (b.y>128) del(bls_enms,b)
		end
		
		laser_update()
end

function bullets_add()
		local _b={x=pl.x,y=pl.y-2,spd=curr_bls.spd,cat=curr_bls_cat}
		add(bls,_b)
end

function bullets_enms_add(_e)
		local _b={x=_e.x,y=_e.y+8,spd=1.8}
		add(bls_enms,_b)
end

function laser_update()
		if not is_laser_on() then
				return
		end
		
		for e in all(enms) do
				if abs(e.x-pl.x)<4
				and e.y<pl.y
				then
						scr_add(e.scr)
						del(enms,e)
						enms_spawn()
						for i=0,6 do
								ptcs_add(e.x+4,
																	e.y-2,
																	-5+rnd(10),
																	-5+rnd(10),
																	40,
																	{3,1,11,2,13,3,1},
																	3+rnd(3))
						end
				end
		end

		shake_set(0.06)
		for i=0,3 do
				ptcs_add(pl.x+4,
													pl.y-2,
													-4+rnd(8),
													-4+rnd(8),
													4+rnd(4),
													{7,7,11,3,5},
													2+rnd(2))
		end
end

function laser_draw()
		if not is_laser_on() then
				return
		end
		
		laser_sparks={}
		local _yoffset=ceil(pl.y/10)+1
		local _yoffsetmax=(128/10)+1
		
		for i=0,_yoffset do
				local _pt={
						x=pl.x+(-2+rnd(12)),
						y=pl.y-_yoffsetmax*i}
						
				if (i==0) _pt.x=pl.x+4
				add(laser_sparks,_pt)
		end
		
		for i=1,#laser_sparks-2 do
				local _pt=laser_sparks[i]
				local _ptnext=laser_sparks[i+1]
				line(_pt.x,_pt.y,_ptnext.x,_ptnext.y,11)
		end
		
		rectfill(pl.x+2,pl.y+4,pl.x+5,0,11)
		rectfill(pl.x+3,pl.y+4,pl.x+4,0,7)
end

function bullets_collision()
	for b in all(bls) do
	
			-- enemies.
			for e in all(enms) do
					if (abs(e.x-b.x)<6)
					and (abs(e.y-b.y)<4)
					then
							scr_add(e.scr)
							del(enms,e)
							enms_spawn()
							bonus_try_add(e.x,e.y)
							
							if b.cat==1 then
									on_base_bullet_hit(b)
							elseif b.cat==2 then
									on_piercing_bullet_hit(b)
							elseif b.cat==3 then
									on_exploding_bullet_hit(b)
							end
							
							goto continue
					end
			end
	
	::continue::
	end
end

function on_base_bullet_hit(_b)
		del(bls,_b)

		shake_set(0.08)
		for i=0,3 do
				ptcs_add(_b.x+4,
													_b.y-2,
													-4+rnd(8),
													-4+rnd(8),
													24,
													{7,8,4,2,1},
													3+rnd(3))
		end
end

function on_piercing_bullet_hit(_b)
		shake_set(0.12)
		for i=0,4 do
				ptcs_add(_b.x+4,
													_b.y-8,
													-4+rnd(8),
													-4+rnd(8),
													48,
													{7,1,12,13,1,1},
													5+rnd(3))
		end
end

function on_exploding_bullet_hit(_b)
		del(bls,_b)
		bls_explosion={x=_b.x,y=_b.y,t=4}
		
		for e in all(enms) do
				-- [todo] radius detection.
				if (abs(e.x-_b.x)<24)
				and (abs(e.y-_b.y)<24)
				then
						scr_add(e.scr)
						del(enms,e)
						enms_spawn()
				end
		end

		shake_set(0.2)
		for i=0,10 do
				ptcs_add(_b.x+4,
													_b.y-4,
													-6+rnd(12),
													-6+rnd(12),
													16+rnd(32),
													{7,1,10,9,8,10,2,2,1},
													1+rnd(15))
		end
end
-->8
-- üê± enemies.

function enms_init()
  enms={}
		enms_cats={}
		enms_cats_availables=1
		
		add(enms_cats,{cat=0,
																	spdmin=0.2,
												     spdmax=0.6,
												     scr=10,
												     drop=0.8})
															     
		add(enms_cats,{cat=1,
		               spdmin=0.4,
												     spdmax=0.4,
												     scr=50,
												     drop=0.2})

		for i=0,14 do
				enms_spawn()
		end
end

function enms_update()
		for e in all(enms) do
				e.y+=e.spd
				if e.y>128 then
						del(enms,e)
						enms_spawn()
				end
				
				-- shooting enemies.
				if e.cat==1 then
				  if e.lifetime%120==0 then
				  		bullets_enms_add(e)
				  end
				end
				
				e.lifetime+=1
		end
end

function enms_draw()
		for e in all(enms) do
				spr(49+e.cat,e.x,e.y)
		end
end

function enms_rnd_drop()
		local _sum=0
		for i=1,enms_cats_availables do
		  _sum+=enms_cats[i].drop
		end
		
		local _pick=rnd(_sum)
		_sum=0
		
		for e in all(enms_cats) do
		  _sum+=e.drop
		  if _pick<_sum then
		    return e
		  end
		end
		
		return nil
end

function enms_spawn()
		local _e=enms_rnd_drop()

		local _newenm={
		  cat=_e.cat,
				x=8+rnd(112),
				y=-100+rnd(80),
				spd=_e.spdmin+rnd(_e.spdmax-_e.spdmin),
				sprindex=_e.sprindex,
				scr=_e.scr,
				lifetime=0}
						
		add(enms,_newenm)
end

function enms_killall()
		enms={}
end
-->8
-- ‚ô• bonus.

function bonus_init()
		bns={}
	
		bns_durs={0,180,300,300,180}
		
		curr_bns={}
		bns_timers={}
		for i=1,#bns_durs do
				add(curr_bns,false)
				add(bns_timers,0)
		end
		
		-- 1=health.
		-- 2=spd up.
		-- 3=piercing bullets.
		-- 4=exploding bullets.
		-- 5=laser.
		bns_drop={1,2,2,2,2,3,3,3,4,4,5,5}
end

function bonus_update()
		for b in all(bns) do
				b.y+=b.spd
				if (b.y>128) del(bonus,b)
		end
		
		-- timers.
		for i=1,#bns_timers do
				if bns_timers[i]>0 then
						bns_timers[i]-=1
						if bns_timers[i]==0 then
								curr_bns[i]=false
						
								-- specific to each bonus.
								if i==2 then
										pl.spd=pl_spd
										for i=0,3 do
												ptcs_add(pl.x+2,
																					pl.y+2,
																					-4+rnd(8),
																					-4+rnd(8),
																					24,
																					{10,1,9,12,1},
																					rnd(6,14))
										end
								elseif i==3 or i==4 then
										bls_setcat(1)
								end
						end
				end
		end
end

function bonus_draw()
		for b in all(bns) do
			 spr(16+b.cat,b.x,b.y)
		end
end

function bonus_try_add(_x,_y)
		if (rnd(4)>1) return
	
		local _cat=bonus_rnd_drop()
		b={x=_x,y=_y,spd=0.75,cat=_cat}
		add(bns,b)
end

function bonus_rnd_drop()
		return bns_drop[ceil(rnd(#bns_drop))]
end

function bonus_clear()
		for i=2,#bns_timers do
			 bns_timers[i]=0
			 curr_bns[i]=false
		end
end

function bonus_pickup(_b)
		if _b.cat==1 then
				pl_heal(1)
				for i=0,3 do
						ptcs_add(_b.x+2,
															_b.y+2,
															-4+rnd(8),
															-4+rnd(8),
															24,
															{8,2,1},
															rnd(8,10))
				end
		elseif _b.cat==2 then
				pl_spdboost()
				for i=0,6 do
						ptcs_add(_b.x+2,
															_b.y+2,
															-8+rnd(16),
															-8+rnd(16),
															14,
															{10,9,10,9,12,1},
															rnd(4,12))
				end
				shake_add(0.07)
		elseif _b.cat==3 then
				bls_setcat(2)
				bns_timers[4]=0
				curr_bns[4]=false
				for i=0,4 do
						ptcs_add(_b.x+2,
															_b.y+2,
															-5+rnd(10),
															-5+rnd(10),
															22,
															{12,13,13,6,1,1},
															rnd(5,9))
				end
		elseif _b.cat==4 then
				bls_setcat(3)
				bns_timers[3]=0
				curr_bns[3]=false
				for i=0,4 do
						ptcs_add(_b.x+2,
															_b.y+2,
															-5+rnd(10),
															-5+rnd(10),
															22,
															{8,9,10,6,2,2,1},
															rnd(5,9))
				end
		elseif _b.cat==5 then
				bns_timers[3]=0
				bns_timers[4]=0
				curr_bns[3]=false
				curr_bns[4]=false
				bls_setcat(1)
		end
		
		if (_b.cat>1) curr_bns[_b.cat]=true
		bns_timers[_b.cat]=bns_durs[_b.cat]
		del(bns,_b)
end

function is_laser_on()
		return curr_bns[5]
end
-->8
-- ‚òÖ stars.

function stars_init()
		stars={}
		stars_spd_mult=1
		stars_clear_step=4
		stars_clear_timer=0
		
		-- slow stars.
		for i=1,24 do
				local _s={x=rnd(128),
														y=rnd(128),
														spd=rnd(0.4)+0.8,
														col=1}
							
				add(stars,_s)
		end
		
		-- fast stars.
		for i=1,9 do
				local _s={x=rnd(128),
														y=rnd(128),
														spd=rnd(1.3)+1.8,
														col=6}
							
				add(stars,_s)
		end
end

function stars_update()
		if gstate==2 then
				stars_spd_mult*=0.96
				
				if stars_clear_timer==0 then
						del(stars,stars[ceil(rnd(#stars))])
						stars_clear_timer=stars_clear_step
				else
				  stars_clear_timer-=1
				end
		end

		local _lasermult=1
		if gstate==1 then
				if (is_laser_on()) _lasermult=2
		end
		
		for s in all(stars) do
				s.y+=s.spd*stars_spd_mult*_lasermult
				if s.y>128 then
						s.x=rnd(128)
						s.y=0
				end
		end
end

function stars_draw()
		for s in all(stars) do
				pset(s.x,s.y,s.col)
		end
end
-->8
-- ‚ßó feedback.

shake=0
ptcs={}

function shake_set(_s)
		shake=mid(0,_s,1)
end

function shake_add(_s)
		shake_set(shake+_s)
end

function shake_update()
		local _x=(6-rnd(12))*shake
		local _y=(6-rnd(12))*shake
		camera(_x,_y)
		shake*=0.95
		if (shake<0.05) shake=0
end

function ptcs_add(_x,_y,_dx,_dy,_agemax,_colseq,_size)
		local _p=
		{
				x=_x,
				y=_y,
				dx=_dx,
				dy=_dy,
				age=0,
				agemax=_agemax,
				colseq=_colseq,
				size=_size,
				init_size=_size
		}
	
	add(ptcs,_p)
end

function ptcs_update()
		local pt
		for p=#ptcs,1,-1 do
			 _p=ptcs[p]
			 _p.age+=1
			 if _p.age>_p.agemax then
			  	del(ptcs,_p)
			 else
				 	_p.col=_p.colseq[
				 		1+flr((_p.age/_p.agemax)*#_p.colseq)]
		 	 	
				 	-- move particles.
				 	_p.x+=_p.dx
				 	_p.y+=_p.dy
				 	
				 	-- shrink.
				 	_p.size=(1-(_p.age/_p.agemax))*_p.init_size
			 	 
			 	 -- brake.
			 	 _p.dx*=0.75
			 	 _p.dy*=0.75
		 	end
		end
end

function ptcs_draw()
		for pt in all(ptcs) do
				circfill(pt.x,pt.y,pt.size,pt.col)
		end
end

function screenflash_draw()
		if pl_dmgflash_timer>0 then
				cls(8)
				return true
		end
				
		if bns_timers[5]>=bns_durs[5] then
				if bns_timers[5]>=bns_durs[5]-1 then
						cls(7)
				else
						cls(3)
				end
				return true
		end
		
		return false
end
-->8
-- ‚ñ§ gui.

lowhealthsprseq={17,34,35}
lowhealthsprtimer=0

function gui_draw()
		rectfill(-4,-4,132,7,0)
		gui_draw_health()
		gui_draw_scr()
		gui_draw_bonus()
end

function gui_draw_health()
  for i=1,pl_healthmax do
  		local _s=17
  		if i>pl_health then
  		  _s=33
  		elseif pl_health==1 then
				  lowhealthsprtimer+=1
				  _s=table_mod(lowhealthsprseq,lowhealthsprtimer,5,0)
  		end
  		
  		spr(_s,(i-1)*6+1,1)
  end
end

function gui_draw_scr()
		local l=#tostr(scr)
		print(scr,124-(l-1)*4,1,7)

		-- leading zeros.
		for i=1,10-l do
				print("0",124-((l-1)*4)-(i*4),1,1)
		end
end

function gui_draw_bonus()
		for i=2,#curr_bns do
				local _x=22+10*i
				if curr_bns[i] then
						spr(16+i,_x,1)
						
						-- timer.
						local _xa=_x-1
						local _xb=_x+5
						local _xend=lerp(
																		_xa,
																		_xb,
																		bns_timers[i]/bns_durs[i])
						
						line(_xa,7,_xend,7,6)
				else
						spr(22,_x,1)
				end
		end
end
-->8
-- tools.

function lerp(_a,_b,_t)
	 return _a*(1-_t)+_b*_t
end

function table_mod(_table,_timer,_rate,_offset)
	 return _table[flr((_timer+_offset)/_rate)%#_table+1]
end



-- screen fade.

function screenfade_init()
		fading=false
		fade_timer=0
		fade_perc=1
		fade_perc_target=1
		nofade_timer=0
end

function update_fade()
	 fading=fade_perc!=fade_perc_target
		if fading then
				nofade_timer=0
				fade_timer+=0.5
			 if fade_timer>2 then
				 	fade_perc=mid(0,fade_perc+0.2*sgn(fade_perc_target-fade_perc),1)
				 	fade_timer=0
			 end
			 
			 fade_pal(fade_perc)
		else
		  nofade_timer+=1
		end
end

function fade_pal(_perc)
		local _p=flr(mid(0,_perc,1)*100)
		local _kmax,_c
		local _dpal={
		 0,1,1,2,1,13,6,4,4,9,3,16,1,13,14}
		 
		for j=1,15 do
				_c=j
				_kmax=(_p+(j*1.46))/22
				for k=1,_kmax do
						_c=_dpal[_c]
				end
				pal(j,_c)
		end
end
__gfx__
0000000000700700007007000000000000000000000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000
0000000000c00c0000a00a000000000000000000000770000000000000088000000000000000000000000000000000000000000b000000000000000000000000
00700700066006600760067007b00b7000700700000dd00000088000000880000000000000000000000000000000000300000000000000000000000000000000
000770000667c6d00767a6700737737000a00a00000dd0000089a800000880000000000000000000000000bb0000000000b000b0000000000000000000000000
00077000666dd66677699677773bb37700900900000dd00000299800000ee0000000000000000000000b07077bbbb00000070000070000000007000000000000
00700700d6666666777dd777777337770000000000011000000220000000000000000000000000000000000b00777bbbb0000000000b30000000000000000000
00000000055115500ee99ee00553355000000000000cc0000000000000000000000000000000000000000000000bb00000000000070000000000000000000000
000000000d0000d00e0000e00500005000000000000cc00000000000000000000000000000000000000000000700007707707070b00000000000000000000000
00000000880880000aaa00000dd00000000a00000bbb0000000000000000000000000000000000000000000007070737073070707bbbb0000000000000000000
0000000088888000aaa00000d7cd000008900000b773b00000000000000000000000000000000000000000000707077307003730b7777bbbb000070666600000
0000000088888000aaaa00001cc1000082220000b773b000011000000000000000000000000000000000000003730377070073000bbbb7777bbbbbb6d665d000
000000000888000000a000000110000082280000b33b30000110000000000000000000000000000000000000003000330300300000000bbbb777773366650000
00000000008000000a0000001cc10000088000000bb3000000000000000000000000000000000000000020000000000000000000000000000bbbb777bd630000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa00aa00aaa0aaa0aa00a0000000b66d6300000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a2a0a2a0a2a0aaa0a2a0a000000666666500000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000008000a0a0a0a0aa20a2a0aaa0a0000000000665d0000
00000000220220009909900077077000000000000000000000000000000000000000000000000000000088000a0a0aaa0a2a0a0a0a2a0aaa000000006d000000
00000000202020009999900077777000000000000000000000000000000000000000000000000000000000000202022202020202020202220000008000000000
00000000200020009999900077777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
000000000202000009990000077700000000000000000000000000000000000000000000000000002000000000aa0a0a0aa000aa0aaa0aaa0aa0000000000000
00000000002000000090000000700000000000000000000000000000000000000000000000000000000008000700070707070707007007000707000080000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaa0aaa0a0a0a0a00a00aa00aa0000888000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009090909090909009009000909000080000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000990090909990999009009990909000000000000
00000000007007000070070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002002000020020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000005555550dddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556ee655dd1111dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555ee5550dd55dd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000052002500880088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008008000800008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007007000700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000bb0000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000b0000000000000000000000000000000000000000b000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000b0bb0000000000000000000000000000000b000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000077770bbb00000000000000000000b000000b0000b0000000000000000000000000000000000000000
0000000000000000000000000000000000000000000b00000777777bbbb00000000000000000700b000000070000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000bb0bb77777777bbbb00000000000000000b0000000000bb00000030000000000000000000000000000
000000000000000000000000000000000000000000000000000bbbb77777777bbbb0b00000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000bbbb777777000000bb0000000000000007000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000070000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000007700000000777700777700770077070000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000770000000077770077770077007700000007b0000000000000000000000b0000000000000
0000000000000000000000000000000000000000000000000000000770077007733770077330077007700bbb0000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000770077007700770077000077007700777bbbb000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000007700770077773300770000337733007777777bbbb00000000000000b00006666666600000
0000000000000000000000000000000000000000000000000000000770077007777000077000000770000bbb77777777bbbb0000000000007666666666600000
0000000000000000000000000000000000000000000000000000000337733003377770077000077330000000bbbb77777777bbbb0000000000066dd666655dd0
000000000000000000000000000000000000000000000000000000000770000007777007700007700000bb000000bbbb77777777bbbb000bbbb66dd666655ddd
00000000000000000000000000000000000000000000002000000000033000000333300330000330000b000000000000bbbb77777777bbbb777bb66666655000
0000000000000000000000000000000000000000000000020000000000000000000000000000000000000000b00000000000bbbb77777777777bb66666655000
00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000bbbb777777777bbdd6633000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb77777bbdd6633000
0000000000000000000000000000000000000000000000000000000aaaa00000aaa0000aaaaaa00aaaaaa00aaaaaa00aa000000000000000bbbbbdd663300000
0000000000000000000000000000000000000000000000000000000aaaa0000aaaa0000aaaaaa00aaaaaa00aaaaaa00aa000000000000b00066bbdd663300000
0000000000000000000000000000000000000000000000000000800aa22aa00aa22aa00aa22aa00aaaaaa00aa22aa00aa0000000000000766666666665500000
0000000000000000000000000000000000000000000000000000000aa00aa00aa00aa00aa00aa00aaaaaa00aa00aa00aa0000000000b00000666666665500000
000000000000000000000000000000000000000000000000000000077007700770077007777220077227700777777007700000000000000000000666655dd000
0000000000000000000000000000000000000000008000000000000aa00aa00aa00aa00aaaa0000aa00aa00aaaaaa00aa0000000000000b000000666655ddd00
0000000000000000000000000000000000000000088000800000000aa00aa00aaaaaa00aa22aa00aa00aa00aa22aa00aaaaaa000000000000000066dd0000000
0000000000000000000000000000000000000000000000000000000aa00aa00aaaaaa00aa00aa00aa00aa00aa00aa00aaaaaa000000000000000066dd0000000
00000000000000000000000000000000000000000000000000000002200220022222200220022002200220022002200222222000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000
000000000000000000000000000000000000000000000000000000000aaaa00aa00aa00aaaa000000aaaa00aaaaaa00aaaaaa00aaaa000000000000000220000
00000000000000000000000000000000000022000000000000000000077770077007700777700000077770077777700777777007777000080000000000000000
00000000000000000000000000000000000000000000000800000007700000077007700770077007700770000770000770000007700770000000000000000000
00000000000000000000000000000000000000000000008880000007700000077007700770077007700770000770000770000007700770000000800000000000
0000000000000000000000000000000000000000000000080000000aaaaaa00aaaaaa00aa00aa00aa00aa0000aa0000aaaa0000aaaa000000008880000000000
0000000000000000000000000000000000000000000000000000000aaaaaa00aaaaaa00aa00aa00aa00aa0000aa0000aaaa0000aaaa000000000800000000000
00000000000000000000000000000000000000000000000008000000000990099009900990099009900990000990000990000009900990000000000000000000
00000000000000000000000000000000000000000000000000000000000aa00aa00aa00aa00aa00aa00aa0000aa0000aa000000aa00aa0000000000000000000
00000000000000000000000000000000000000000000000000000009999000099009900999999009999990000990000999999009900990000000000000200000
00000000000000000000000000000000000000000000000000000009999000099009900999999009999990000990000999999009900990000000000000000000
